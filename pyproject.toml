[tool.poetry]
name = "aakmer"
version = "0.0.1"
description = "Light, fast amino acid kmer counting"
authors = ["Paul Villanueva <pvillanueva13@gmail.com>"]
license = "MIT"
readme = "README.md"

documentation = "https://pommevilla.github.io/aakmer"
homepage = "https://pommevilla.github.io/aakmer"
repository = "https://github.com/pommevilla/aakmer"

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

packages = [{ include = "aakmer", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.7.1, <4.0"
click = "^8.1.7"
logging = "^0.4.9.6"

[tool.poetry.dev-dependencies]
autoflake = "*"
black = "*"
flake8 = "*"
flake8-bugbear = "*"
flake8-builtins = "*"
flake8-comprehensions = "*"
flake8-debugger = "*"
flake8-eradicate = "*"
flake8-logging-format = "*"
isort = "*"
mkdocstrings = { version = ">=0.18", extras = ["python"] }
mkdocs-material = "*"
mypy = "*"
pep8-naming = "*"
pre-commit = "*"
pymdown-extensions = "*"
pytest = "*"
pytest-github-actions-annotate-failures = "*"
pytest-cov = "*"
python-kacl = "*"
pyupgrade = "*"
tryceratops = "*"

[tool.poetry.group.dev.dependencies]
pytest-dependency = "^0.5.1"

[tool.poetry.scripts]
test_hello = "aakmer.cli:test"
read_fasta = "aakmer.cli:read_fasta"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]

[tool.black]
target-version = ["py37", "py38", "py39"]
include = '\.pyi?$'

[tool.pytest.ini_options]
addopts = """\
    --cov aakmer \
    --cov tests \
    --cov-report term-missing \
    --no-cov-on-fail \
"""

[tool.coverage.report]
fail_under = 100
exclude_lines = ['if TYPE_CHECKING:', 'pragma: no cover']

[tool.mypy]
disallow_any_unimported = true
disallow_untyped_defs = true
no_implicit_optional = true
strict_equality = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
check_untyped_defs = true
show_error_codes = true
